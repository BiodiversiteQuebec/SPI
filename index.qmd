---
title: "Indicateur de protection des espèces"
format:
  html:
    theme: flatly
    toc: true
    code-fold: show
    code-tools: true
    source: repo
---

# Points clé

## **Augmentation de la protection de toutes les espèces ciblées au cours des 61 dernières années**  
Augmentation minimale de 1% pour la Salamande sombre des montagnes (*Desmognathus ochrophaeus*)  
Augmentation maximale de 70% pour la Rainette faux grillon (*Pseudacris maculata*)  
Avec une moyenne de 11% pour les xxx espèces considérées  
À mettre en lien avec le seuil Aichi de 17%  

## **Etat de la protection des espèces du nord vs. du Sud**  
*Une espèce est considérée du nord si la latitude du centroïde de son aire de répartition est supérieure à 55°. Inversement, une espèce dont la latitude du centroïde de son aire de répartition est inférieure ou égale à cette valeur seuil, sera considérée comme une espèce du sud.*  
Les espèces du Nord présentent un SPI moyen de 17% (sd = 4%).  
Les espèces du Sud présentent un SPI moyen 9% (sd = 8%).  

## **Moments marquants de la création des aires protégées**  
Farfouiller autour des années 1981 et 2003 qui correspondent à une augmentation importante de la superficie des aires protégées.  

## **Identification d'espèces extrêmes en terme de protection**  
cf la Salamandre sombre des montagnes et la Rainette faux grillon

## **Représentativité des espèces dans les aires protégées**  


# Visualisation  

```{r, include = F}
# packages
library(knitr)
library(mapview)
library(plotly)
library(sf)
library(terra)
library(htmltools)
library(viridis)
library(smoothr)
library(rmapshaper)

# raw data
aire_prot_union <- st_read("data_clean/aires_protegees_union.gpkg")
aire2 <- ms_simplify(aire_prot_union)
SPI <- read.csv("results/SPI.csv")[, -1]
names <- as.character(unique(SPI$SPECIES))
years <- as.numeric(unique(SPI$YEAR))

# produced data
# ---

all_sm <- data.frame()
for (i in names) {
    m <- cbind(SPI$YEAR[SPI$SPECIES == i], SPI$SPI[SPI$SPECIES == i])
    sm <- smooth_ksmooth(m, smoothness = 4)
    df <- as.data.frame(sm)
    names(df) <- c("YEAR", "SPI")
    df$SPECIES <- i
    df$YEAR2 <- floor(df$YEAR)
    df$SPI2 <- round(df$SPI, digits = 3)
    df$INFOS <- paste0("<b>", df$SPECIES, "</b><br>Année <b>", df$YEAR2, "</b><br>SPI = <b>", df$SPI2, "</b>")
    all_sm <- rbind(all_sm, df)
}

# mean SPI
# --------
year_mean <- c()
for (i in years) {
    sub_year <- SPI$SPI[SPI$YEAR == i]
    year_mean <- c(year_mean, mean(sub_year, na.rm = TRUE))
}

# smooth mean values
# ------------------
mm <- cbind(years, year_mean)
s_mm <- smooth_ksmooth(mm, smoothness = 4)
df_max <- SPI[SPI$SPECIES == "Pseudacris maculata", ]
df_min <- SPI[SPI$SPECIES == "Desmognathus ochrophaeus", ]
s_max <- smooth_ksmooth(as.matrix(df_max[, c(3, 2)]), smoothness = 4)
s_min <- smooth_ksmooth(as.matrix(df_min[, c(3, 2)]), smoothness = 4)

s_range <- list(s_mm, s_max, s_min)
names(s_range) <- c("s_mm", "s_max", "s_min")

s_range <- lapply(s_range, function(x){
    df <- as.data.frame(x)
    names(df) <- c("YEAR_PRED", "SPI")
    df$SPI2 <- round(df$SPI, digits = 3)
    df$YEAR2 <- floor(df$YEAR)
    df
})

s_mm <- s_range[["s_mm"]]
s_mm$SP <- "Valeur moyenne"
s_max <- s_range[["s_max"]]
s_max$SP <- "Pseudacris maculata"
s_min <- s_range[["s_min"]]
s_min$SP <- "Desmognathus ochrophaeus"

sm_ls <- list(s_mm, s_min, s_max)
names(sm_ls) <- c("s_mm", "s_min", "s_max")

sm_ls <- lapply(sm_ls, function(x){
    x$INFOS <- paste0("<b>", x$SP, "</b><br>Année <b>", x$YEAR2, "</b><br>SPI = <b>", x$SPI2, "</b>")
    x
})

s_mm <- sm_ls[[1]]
s_min <- sm_ls[[2]]
s_max <- sm_ls[[3]]

# ---
last_spi <- read.csv2("data_clean/SPI_north_south.csv")

# Output figure in HTML5
# if (knitr::is_html_output()) {
#     knitr::knit_hooks$set(
#         plot = function(x, options) {
#             cap <- options$fig.cap # figure caption
#             tags <- htmltools::tags
#             as.character(tags$figure(
#                 tags$img(src = x, alt = cap),
#                 tags$figcaption(cap)
#             ))
#         }
#     )
# }
```

## Figure 1  

```{r, echo=F, warnings=F}
#| label: fig-spi_trend
#| fig-cap: "Valeur moyenne et par espèce de l'indice de protection des espèces. La courbe bleue représente le SPI moyen, les courbes verte et pourpre représentent les espèces la moins et la plus protégée, respectivement."
#| warning: false

g <- plot_ly() |> add_lines(x = s_mm$YEAR_PRED,
                            y = s_mm$SPI,
                            color = I("#238A8DFF"),
                            text = s_mm$INFOS,
                            hoverinfo = "text"
        )

for (i in names) {
    sm <- all_sm[all_sm$SPECIES == i, ]
    g <- add_lines(g,
        x = sm$YEAR,
        y = sm$SPI,
        color = I("lightgrey"),
        text = sm$INFOS,
        hoverinfo = "text"
    )
}
g <- add_lines(g, x = s_mm$YEAR_PRED, y = s_mm$SPI, color = I("#238A8DFF"), text = s_mm$INFOS, hoverinfo = "text")
g <- add_lines(g, x = s_min$YEAR_PRED, y = s_min$SPI, color = I("#B8DE29FF"), text = s_min$INFOS, hoverinfo = "text")
g <- add_lines(g, x = s_max$YEAR_PRED, y = s_max$SPI, color = I("#404788FF"), text = s_max$INFOS, hoverinfo = "text")
g |> layout(
    showlegend = F,
    yaxis = list(zeroline = FALSE, title = "SPI"),
    xaxis = list(zeroline = FALSE, title = "Année")
)
```

## Figure 2
```{r, echo=F, warning = FALSE}
#| label: fig-spi_2023
#| fig-cap: "Valeur de l'indicateur de protection des espèces en 2023."
#| warning: false

# conversion from species characters to ordered levels of factor for keeping increasing SPI
last_spi$SPECIES2 <- factor(last_spi$SPECIES, levels = last_spi$SPECIES[order(last_spi$SPI, decreasing = FALSE)])

# fonction for drawing a vertical line
vline <- function(x = 0, color = "#238A8DFF") {
    list(
        type = "line",
        y0 = 0,
        y1 = 1,
        yref = "paper",
        x0 = x,
        x1 = x,
        line = list(color = color, dash = "dot")
    )
}

fig <- plot_ly() |>
    add_bars(
        data = last_spi,
        x = ~SPI,
        y = ~SPECIES2,
        type = "bar",
        orientation = "h",
        color = ~LOC,
        # colors = pal2,
        hovertemplate = paste(
            "<b>%{y}</b><br>",
            "<b>SPI</b> = %{x}"
        )
    ) |>
    layout(
        yaxis = list(zeroline = FALSE, title = "Espèce", showticklabels = FALSE),
        xaxis = list(zeroline = FALSE),
        shapes = list(vline(0.17, color = "black"))
    )
# print(fig)
fig
```
## Figure 3

```{r, echo=F}
#| label: fig-aires_prot
#| fig-cap: "Carte des aires protégées actuelles."
#| warning: false
mapview(aire2, col.regions = "#238A8DFF", popup = F, legend = F)
```
